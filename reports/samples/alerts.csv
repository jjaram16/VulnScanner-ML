alert,alertRef,attack,confidence,cweid,description,evidence,id,inputVector,messageId,method,name,other,param,pluginId,reference,risk,solution,sourceMessageId,sourceid,tags,url,wascid
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,0,,13,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",13,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/login.php,15
Cookie No HttpOnly Flag,10010,,Medium,1004,"A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",Set-Cookie: PHPSESSID,1,,11,GET,Cookie No HttpOnly Flag,,PHPSESSID,10010,https://owasp.org/www-community/HttpOnly,Low,Ensure that the HttpOnly flag is set for all cookies.,11,3,"{'CWE-1004': 'https://cwe.mitre.org/data/definitions/1004.html', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'POLICY_DEV_STD': ''}",http://dvwa/,13
Cookie No HttpOnly Flag,10010,,Medium,1004,"A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",Set-Cookie: security,3,,11,GET,Cookie No HttpOnly Flag,,security,10010,https://owasp.org/www-community/HttpOnly,Low,Ensure that the HttpOnly flag is set for all cookies.,11,3,"{'CWE-1004': 'https://cwe.mitre.org/data/definitions/1004.html', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'POLICY_DEV_STD': ''}",http://dvwa/,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,4,,13,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",13,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/login.php,15
Cookie without SameSite Attribute,10054-1,,Medium,1275,"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",Set-Cookie: PHPSESSID,5,,11,GET,Cookie without SameSite Attribute,,PHPSESSID,10054,https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site,Low,Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.,11,3,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'CWE-1275': 'https://cwe.mitre.org/data/definitions/1275.html', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html', 'POLICY_DEV_STD': ''}",http://dvwa/,13
Cookie without SameSite Attribute,10054-1,,Medium,1275,"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",Set-Cookie: security,7,,11,GET,Cookie without SameSite Attribute,,security,10054,https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site,Low,Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.,11,3,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'CWE-1275': 'https://cwe.mitre.org/data/definitions/1275.html', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html', 'POLICY_DEV_STD': ''}",http://dvwa/,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),8,,11,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",11,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),9,,13,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",13,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/login.php,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,10,,13,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",13,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/login.php,15
Session Management Response Identified,10112,,Medium,-1,"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to ""Auto-Detect"" then this rule will change the session management to use the tokens identified.",PHPSESSID,11,,11,GET,Session Management Response Identified,cookie:PHPSESSID,PHPSESSID,10112,https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id,Informational,This is an informational alert rather than a vulnerability and so there is nothing to fix.,11,3,{},http://dvwa/,-1
Session Management Response Identified,10112,,High,-1,"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to ""Auto-Detect"" then this rule will change the session management to use the tokens identified.",PHPSESSID,12,,13,GET,Session Management Response Identified,cookie:PHPSESSID,PHPSESSID,10112,https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id,Informational,This is an informational alert rather than a vulnerability and so there is nothing to fix.,13,3,{},http://dvwa/,-1
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,13,,20,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",20,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/sitemap.xml,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),14,,26,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",26,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/login.css,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),15,,20,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",20,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/sitemap.xml,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),16,,22,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",22,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/robots.txt,13
Cookie No HttpOnly Flag,10010,,Medium,1004,"A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",Set-Cookie: PHPSESSID,19,,19,GET,Cookie No HttpOnly Flag,,PHPSESSID,10010,https://owasp.org/www-community/HttpOnly,Low,Ensure that the HttpOnly flag is set for all cookies.,19,3,"{'CWE-1004': 'https://cwe.mitre.org/data/definitions/1004.html', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'POLICY_DEV_STD': ''}",http://dvwa,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,20,,26,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",26,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/login.css,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),21,,32,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",32,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/RandomStorm.png,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,22,,22,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",22,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/robots.txt,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),23,,30,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",30,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/login_logo.png,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,25,,30,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",30,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/login_logo.png,15
Session Management Response Identified,10112,,High,-1,"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to ""Auto-Detect"" then this rule will change the session management to use the tokens identified.",PHPSESSID,26,,22,GET,Session Management Response Identified,cookie:PHPSESSID,PHPSESSID,10112,https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id,Informational,This is an informational alert rather than a vulnerability and so there is nothing to fix.,22,3,{},http://dvwa,-1
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),27,,34,POST,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",34,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/login.php,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,28,,32,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",32,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/RandomStorm.png,15
Cookie No HttpOnly Flag,10010,,Medium,1004,"A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",Set-Cookie: security,30,,19,GET,Cookie No HttpOnly Flag,,security,10010,https://owasp.org/www-community/HttpOnly,Low,Ensure that the HttpOnly flag is set for all cookies.,19,3,"{'CWE-1004': 'https://cwe.mitre.org/data/definitions/1004.html', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'POLICY_DEV_STD': ''}",http://dvwa,13
Cookie without SameSite Attribute,10054-1,,Medium,1275,"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",Set-Cookie: PHPSESSID,31,,19,GET,Cookie without SameSite Attribute,,PHPSESSID,10054,https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site,Low,Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.,19,3,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'CWE-1275': 'https://cwe.mitre.org/data/definitions/1275.html', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html', 'POLICY_DEV_STD': ''}",http://dvwa,13
Authentication Request Identified,10111,,High,-1,"The given request has been identified as an authentication request. The 'Other Info' field contains a set of key=value lines which identify any relevant fields. If the request is in a context which has an Authentication Method set to ""Auto-Detect"" then this rule will change the authentication to match the request identified.",password,34,,34,POST,Authentication Request Identified,"userParam=Login
userValue=Login
passwordParam=password
referer=http://dvwa/login.php",Login,10111,https://www.zaproxy.org/docs/desktop/addons/authentication-helper/auth-req-id/,Informational,This is an informational alert rather than a vulnerability and so there is nothing to fix.,34,3,{},http://dvwa/login.php,-1
Cookie No HttpOnly Flag,10010,,Medium,1004,"A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",Set-Cookie: PHPSESSID,35,,23,GET,Cookie No HttpOnly Flag,,PHPSESSID,10010,https://owasp.org/www-community/HttpOnly,Low,Ensure that the HttpOnly flag is set for all cookies.,23,3,"{'CWE-1004': 'https://cwe.mitre.org/data/definitions/1004.html', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'POLICY_DEV_STD': ''}",http://dvwa/login.php,13
Session Management Response Identified,10112,,High,-1,"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to ""Auto-Detect"" then this rule will change the session management to use the tokens identified.",PHPSESSID,39,,34,POST,Session Management Response Identified,cookie:PHPSESSID,PHPSESSID,10112,https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id,Informational,This is an informational alert rather than a vulnerability and so there is nothing to fix.,34,3,{},http://dvwa/login.php,-1
Cookie without SameSite Attribute,10054-1,,Medium,1275,"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",Set-Cookie: security,40,,19,GET,Cookie without SameSite Attribute,,security,10054,https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site,Low,Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.,19,3,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'CWE-1275': 'https://cwe.mitre.org/data/definitions/1275.html', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html', 'POLICY_DEV_STD': ''}",http://dvwa,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),43,,19,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",19,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa,13
Cookie No HttpOnly Flag,10010,,Medium,1004,"A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",Set-Cookie: security,45,,23,GET,Cookie No HttpOnly Flag,,security,10010,https://owasp.org/www-community/HttpOnly,Low,Ensure that the HttpOnly flag is set for all cookies.,23,3,"{'CWE-1004': 'https://cwe.mitre.org/data/definitions/1004.html', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'POLICY_DEV_STD': ''}",http://dvwa/login.php,13
Session Management Response Identified,10112,,Medium,-1,"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to ""Auto-Detect"" then this rule will change the session management to use the tokens identified.",PHPSESSID,46,,19,GET,Session Management Response Identified,cookie:PHPSESSID,PHPSESSID,10112,https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id,Informational,This is an informational alert rather than a vulnerability and so there is nothing to fix.,19,3,{},http://dvwa,-1
Cookie without SameSite Attribute,10054-1,,Medium,1275,"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",Set-Cookie: PHPSESSID,48,,23,GET,Cookie without SameSite Attribute,,PHPSESSID,10054,https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site,Low,Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.,23,3,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'CWE-1275': 'https://cwe.mitre.org/data/definitions/1275.html', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html', 'POLICY_DEV_STD': ''}",http://dvwa/login.php,13
Cookie without SameSite Attribute,10054-1,,Medium,1275,"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",Set-Cookie: security,50,,23,GET,Cookie without SameSite Attribute,,security,10054,https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site,Low,Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.,23,3,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_QA_STD': '', 'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes', 'POLICY_PENTEST': '', 'CWE-1275': 'https://cwe.mitre.org/data/definitions/1275.html', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html', 'POLICY_DEV_STD': ''}",http://dvwa/login.php,13
Session Management Response Identified,10112,,Medium,-1,"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to ""Auto-Detect"" then this rule will change the session management to use the tokens identified.",PHPSESSID,53,,23,GET,Session Management Response Identified,cookie:PHPSESSID,PHPSESSID,10112,https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id,Informational,This is an informational alert rather than a vulnerability and so there is nothing to fix.,23,3,{},http://dvwa/login.php,-1
Directory Browsing,0,http://dvwa/dvwa/,Medium,548,"It is possible to view the directory listing. Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.",Parent Directory,54,,1851,GET,Directory Browsing,,,0,https://httpd.apache.org/docs/mod/core.html#options,Medium,"Disable directory browsing. If this is required, make sure the listed files does not induce risks.",1851,1,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_API': '', 'POLICY_QA_STD': '', 'POLICY_QA_FULL': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html'}",http://dvwa/dvwa/,48
Directory Browsing,0,http://dvwa/dvwa/css/,Medium,548,"It is possible to view the directory listing. Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.",Parent Directory,55,,1853,GET,Directory Browsing,,,0,https://httpd.apache.org/docs/mod/core.html#options,Medium,"Disable directory browsing. If this is required, make sure the listed files does not induce risks.",1853,1,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_API': '', 'POLICY_QA_STD': '', 'POLICY_QA_FULL': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html'}",http://dvwa/dvwa/css/,48
Directory Browsing,0,http://dvwa/dvwa/images/,Medium,548,"It is possible to view the directory listing. Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.",Parent Directory,56,,1860,GET,Directory Browsing,,,0,https://httpd.apache.org/docs/mod/core.html#options,Medium,"Disable directory browsing. If this is required, make sure the listed files does not induce risks.",1860,1,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_API': '', 'POLICY_QA_STD': '', 'POLICY_QA_FULL': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html'}",http://dvwa/dvwa/images/,48
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,57,,2131,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2131,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,58,,2134,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,59,,2136,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2136,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,60,,2139,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2139,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,61,,2140,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,62,,2142,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,63,,2146,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2146,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,65,,2155,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,66,,2161,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2161,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,67,,2163,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,68,,2165,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2165,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,69,,2168,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2168,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,70,,2171,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2171,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,71,,2176,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,72,,2187,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2187,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,73,,2194,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2194,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,74,,2201,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,76,,2204,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,77,,2214,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2214,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,78,,2217,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,79,,2218,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2218,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,80,,2224,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,81,,2231,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2231,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,82,,2235,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2235,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,83,,2239,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,84,,2243,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,85,,2244,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2244,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,86,,2247,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2247,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,87,,2248,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,88,,2251,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2251,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,90,,2257,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2257,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,91,,2258,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2258,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,92,,2260,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,93,,2262,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2262,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,94,,2264,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,95,,2268,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2268,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,96,,2269,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,97,,2270,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2270,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,98,,2272,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2272,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,99,,2274,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2274,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,100,,2277,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,101,,2279,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2279,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,102,,2281,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2281,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,103,,2282,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,104,,2285,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2285,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,105,,2286,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,107,,2291,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2291,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,108,,2292,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2292,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,109,,2294,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,110,,2297,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2297,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,111,,2298,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2298,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,112,,2300,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,113,,2302,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2302,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/images,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,114,,2304,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2304,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,115,,2306,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2306,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/css,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,116,,2308,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2308,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,117,,2311,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,118,,2312,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,119,,2315,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,120,,2317,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2317,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,122,,2320,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,123,,2322,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,124,,2324,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,126,,2328,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,127,,2331,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,128,,2332,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,129,,2334,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,13,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,131,,2338,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,19,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,132,,2340,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,134,,2344,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,136,,2348,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,138,,2352,POST,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,34,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/login.php,0
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,154,,2378,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2378,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),158,,2377,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2377,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),160,,2384,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2384,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),161,,2376,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2376,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,167,,2378,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2378,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,169,,2378,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2378,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,171,,2378,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2378,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,173,,2386,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2386,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),175,,2378,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2378,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,176,,2378,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2378,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,177,,2389,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2389,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,178,,2386,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2386,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,179,,2386,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2386,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,180,,2386,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2386,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/,16
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,181,,2389,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2389,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,182,,2389,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2389,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,183,,2389,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2389,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),184,,2386,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2386,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),185,,2389,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2389,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,186,,2386,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2386,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,187,,2389,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2389,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,188,,2392,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2392,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,189,,2397,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2397,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,190,,2393,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2393,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,191,,2397,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2397,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,192,,2393,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2393,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,193,,2392,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2392,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,194,,2393,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2393,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,195,,2397,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2397,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,196,,2392,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2392,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,197,,2392,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2392,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=D,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,198,,2397,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2397,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=A,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,199,,2393,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2393,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=D,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),200,,2392,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2392,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=N;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),201,,2397,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2397,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=S;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,202,,2392,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2392,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,203,,2397,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2397,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),204,,2393,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2393,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=N;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,205,,2393,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2393,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),206,,2414,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2414,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/spanner.png,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,207,,2414,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2414,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/spanner.png,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,208,,2405,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2405,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,209,,2399,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2399,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,212,,2424,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2424,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,214,,2405,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2405,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),215,,2423,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2423,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/warning.png,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,216,,2405,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2405,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,217,,2424,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2424,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,218,,2423,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2423,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/warning.png,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,219,,2399,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2399,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=A,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,220,,2405,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2405,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=A,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),221,,2425,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2425,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/dollar.png,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,222,,2425,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2425,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/dollar.png,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,223,,2424,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2424,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),224,,2405,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2405,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=M;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,225,,2399,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2399,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=A,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,226,,2424,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2424,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=A,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,228,,2405,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2405,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),229,,2424,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2424,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=S;O=A,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,230,,2428,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2428,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,231,,2424,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2424,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,232,,2429,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2429,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,233,,2429,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2429,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=A,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,235,,2427,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2427,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,237,,2399,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2399,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=A,16
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,238,,2429,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2429,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,239,,2428,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2428,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,242,,2427,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2427,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,244,,2428,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2428,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,245,,2428,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2428,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=D,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,246,,2431,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2431,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),247,,2399,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2399,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=M;O=A,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,248,,2429,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2429,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=A,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),250,,2428,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2428,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=N;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),251,,2434,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2434,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/icons/blank.gif,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,253,,2434,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2434,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/icons/blank.gif,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,254,,2427,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2427,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,255,,2431,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2431,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,256,,2399,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2399,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,257,,2431,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2431,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=A,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,258,,2431,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2431,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=A,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,259,,2436,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2436,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),260,,2431,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2431,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=M;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,261,,2431,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2431,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,263,,2437,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2437,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),264,,2439,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2439,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/icons/folder.gif,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,265,,2428,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2428,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),266,,2429,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2429,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=N;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,267,,2436,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2436,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,268,,2436,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2436,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),269,,2443,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2443,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/lock.png,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,270,,2436,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2436,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=A,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,271,,2443,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2443,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/lock.png,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,272,,2440,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2440,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,273,,2437,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2437,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=D,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,274,,2445,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2445,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,275,,2427,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2427,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=D,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),276,,2436,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2436,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=D;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,277,,2439,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2439,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/icons/folder.gif,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),278,,2427,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2427,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=M;O=D,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,279,,2449,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2449,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,280,,2437,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2437,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,281,,2437,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2437,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=D,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,282,,2436,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2436,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,283,,2429,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2429,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=N;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),284,,2437,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2437,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=S;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),286,,2451,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2451,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/logo.png,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,287,,2427,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2427,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=M;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,288,,2437,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2437,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=S;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,289,,2445,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2445,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,290,,2451,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2451,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/logo.png,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,291,,2440,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2440,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=D,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,292,,2452,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2452,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,293,,2440,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2440,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,295,,2440,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2440,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=D,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,296,,2454,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2454,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,297,,2449,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2449,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,298,,2449,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2449,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),299,,2440,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2440,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=M;O=D,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,300,,2449,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2449,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=A,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,301,,2440,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2440,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=M;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,302,,2456,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2456,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,303,,2452,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2452,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,304,,2445,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2445,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,305,,2445,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2445,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/,16
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,306,,2456,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2456,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),307,,2445,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2445,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,308,,2456,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2456,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,309,,2445,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2445,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),310,,2464,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2464,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/icons/back.gif,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),311,,2461,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2461,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/icons/image2.gif,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,312,,2463,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2463,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,313,,2456,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2456,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=D,16
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,314,,2452,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2452,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=A,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,315,,2452,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2452,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=A,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),316,,2449,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2449,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=N;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,317,,2454,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2454,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,318,,2449,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2449,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=N;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),319,,2452,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2452,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=D;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,320,,2454,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2454,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,321,,2452,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2452,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,322,,2465,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2465,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,323,,2461,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2461,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/icons/image2.gif,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,324,,2466,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2466,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,325,,2463,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2463,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,326,,2465,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2465,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,327,,2465,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2465,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,328,,2466,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2466,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,329,,2466,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2466,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,330,,2465,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2465,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=A,16
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,331,,2463,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2463,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,332,,2454,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2454,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=D,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,333,,2466,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2466,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=D,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,334,,2464,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2464,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/icons/back.gif,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa</title>,335,,2463,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2463,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=D,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),336,,2454,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2454,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=M;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),337,,2466,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2466,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=N;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),338,,2456,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2456,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=D;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,339,,2454,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2454,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=M;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,340,,2466,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2466,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),341,,2463,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2463,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/?C=S;O=D,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,342,,2484,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2484,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,343,,2467,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2467,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),344,,2465,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2465,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=M;O=A,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,345,,2481,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2481,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,346,,2465,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2465,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,347,,2484,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2484,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,348,,2467,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2467,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=A,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,349,,2477,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2477,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,350,,2456,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2456,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=D;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,351,,2468,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2468,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,352,,2463,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2463,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/?C=S;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,353,,2488,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2488,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,354,,2484,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2484,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,355,,2481,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2481,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=A,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,356,,2484,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2484,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=D,16
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,357,,2481,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2481,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=A,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,358,,2481,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2481,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=A,16
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,359,,2488,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2488,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,360,,2467,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2467,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,361,,2488,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2488,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),362,,2481,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2481,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=S;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),363,,2484,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2484,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=N;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,364,,2481,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2481,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,365,,2477,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2477,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,366,,2484,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2484,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,367,,2477,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2477,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),368,,2489,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2489,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/source.css,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,369,,2488,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2488,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=A,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,370,,2490,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2490,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),371,,2488,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2488,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=D;O=A,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,372,,2467,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2467,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=A,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,373,,2488,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2488,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,374,,2490,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2490,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),375,,2493,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2493,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/help.css,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,376,,2492,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2492,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=A,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,377,,2477,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2477,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=A,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,378,,2489,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2489,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/source.css,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),379,,2477,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2477,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=D;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),380,,2498,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2498,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/icons/text.gif,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,381,,2477,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2477,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,382,,2468,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2468,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,383,,2468,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2468,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,384,,2498,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2498,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/icons/text.gif,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,385,,2490,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2490,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,386,,2492,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2492,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=A,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,387,,2490,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2490,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/,16
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,388,,2492,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2492,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),389,,2497,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2497,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/dvwaPage.js,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),390,,2467,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2467,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=S;O=A,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,391,,2499,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2499,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,392,,2468,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2468,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,393,,2501,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2501,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,394,,2493,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2493,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/help.css,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,395,,2467,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2467,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,396,,2497,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2497,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/dvwaPage.js,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,397,,2492,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2492,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=A,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,398,,2504,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2504,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,399,,2505,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2505,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,400,,2499,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2499,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,401,,2501,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2501,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),402,,2490,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2490,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,403,,2501,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2501,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),404,,2468,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2468,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),405,,2492,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2492,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=M;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,406,,2499,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2499,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,407,,2490,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2490,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,408,,2504,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2504,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=D,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,409,,2501,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2501,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=A,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,410,,2507,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2507,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),411,,2501,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2501,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=S;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,412,,2505,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2505,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=A,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,413,,2499,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2499,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=D,16
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,414,,2507,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2507,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,415,,2505,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2505,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,416,,2501,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2501,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,417,,2507,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2507,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,418,,2492,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2492,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),419,,2508,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2508,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/main.css,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,420,,2468,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2468,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),422,,2511,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2511,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,423,,2504,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2504,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,424,,2508,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2508,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/main.css,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,425,,2507,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2507,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=A,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,426,,2505,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2505,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=A,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/images</title>,428,,2504,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2504,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=D,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),429,,2512,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2512,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/add_event_listeners.js,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),430,,2499,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2499,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=S;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,431,,2499,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2499,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=S;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,432,,2517,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2517,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,433,,2512,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2512,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/add_event_listeners.js,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,434,,2516,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2516,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/dvwaPhpIds.inc.php,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,435,,2518,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2518,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,436,,2513,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2513,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,437,,2517,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2517,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),438,,2516,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2516,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/dvwaPhpIds.inc.php,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,439,,2519,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2519,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),440,,2504,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2504,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/images/?C=D;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,441,,2518,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2518,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,442,,2518,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2518,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,443,,2518,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2518,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=D,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,444,,2520,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2520,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,445,,2519,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2519,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),446,,2518,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2518,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=S;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,447,,2517,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2517,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=A,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,448,,2517,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2517,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=A,16
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,449,,2520,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2520,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,450,,2513,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2513,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,451,,2518,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2518,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=S;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,452,,2520,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2520,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,453,,2519,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2519,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/css</title>,454,,2520,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2520,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=D,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,455,,2519,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2519,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=D,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),456,,2507,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2507,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=N;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),457,,2505,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2505,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=D;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),458,,2520,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2520,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/css/?C=D;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,459,,2507,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2507,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=N;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,460,,2504,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2504,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/images/?C=D;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,461,,2505,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2505,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,462,,2513,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2513,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),463,,2519,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2519,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=D;O=D,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,464,,2513,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2513,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=D,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,465,,2521,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2521,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,466,,2519,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2519,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=D;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),467,,2517,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2517,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=N;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,468,,2517,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2517,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=N;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),469,,2513,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2513,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,470,,2513,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2513,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,471,,2526,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2526,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,472,,2528,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2528,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/dvwaPage.inc.php,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,473,,2522,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2522,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,474,,2530,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2530,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,475,,2520,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2520,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/css/?C=D;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,476,,2526,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2526,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,477,,2530,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2530,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=D,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,478,,2531,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2531,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,479,,2526,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2526,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,480,,2530,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2530,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,481,,2532,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2532,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,482,,2533,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2533,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,483,,2526,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2526,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=A,16
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,484,,2521,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2521,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,485,,2521,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2521,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,486,,2521,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2521,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=D,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,487,,2530,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2530,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=D,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),488,,2526,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2526,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,489,,2531,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2531,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),490,,2530,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2530,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,491,,2528,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2528,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/dvwaPage.inc.php,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,492,,2522,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2522,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),493,,2521,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2521,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=S;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),494,,2528,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2528,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/dvwaPage.inc.php,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,495,,2521,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2521,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=S;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,496,,2528,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2528,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/dvwaPage.inc.php,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,497,,2530,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2530,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,498,,2531,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2531,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,499,,2526,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2526,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=A,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,500,,2534,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2534,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,501,,2534,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2534,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,502,,2532,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2532,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=A,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,503,,2533,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2533,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),504,,2535,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2535,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/icons/unknown.gif,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,505,,2531,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2531,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=D,16
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,506,,2536,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2536,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,507,,2534,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2534,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,508,,2535,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2535,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/icons/unknown.gif,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),509,,2531,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2531,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=M;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,510,,2522,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2522,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=A,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,511,,2534,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2534,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=A,16
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,512,,2536,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2536,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,513,,2532,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2532,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,HTTP/1.0 500 Internal Server Error,514,,2537,GET,Application Error Disclosure,,,90022,,Low,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2537,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/MySQL.php,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/js</title>,515,,2532,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2532,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=A,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),516,,2534,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2534,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=A,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,517,,2533,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2533,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),518,,2532,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2532,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js/?C=N;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),519,,2539,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2539,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/js,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,520,,2531,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2531,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=M;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,521,,2522,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2522,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=A,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,522,,2532,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2532,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/js/?C=N;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,523,,2537,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2537,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/MySQL.php,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,524,,2541,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2541,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=D,15
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,525,,2542,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2542,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=A,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,526,,2536,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2536,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,527,,2533,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2533,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=D,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes</title>,528,,2536,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2536,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=D,16
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,529,,2534,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2534,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=N;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),530,,2536,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2536,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=M;O=D,13
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,531,,2542,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2542,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),532,,2537,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2537,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/MySQL.php,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,533,,2542,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2542,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=A,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,534,,2541,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2541,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=D,13
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,535,,2542,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2542,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=A,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),536,,2522,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2522,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=A,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),537,,2542,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2542,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=A,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,538,,2522,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2522,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=M;O=A,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),539,,2543,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2543,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,540,,2542,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2542,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=A,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,541,,2536,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2536,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=M;O=D,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,HTTP/1.0 500 Internal Server Error,542,,2546,GET,Application Error Disclosure,,,90022,,Low,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2546,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/PGSQL.php,13
Missing Anti-clickjacking Header,10020-1,,Medium,1021,The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.,,543,,2545,GET,Missing Anti-clickjacking Header,,x-frame-options,10020,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,Medium,"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.
If you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's ""frame-ancestors"" directive.",2545,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-1021': 'https://cwe.mitre.org/data/definitions/1021.html', 'WSTG-v42-CLNT-09': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,544,,2546,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2546,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/PGSQL.php,15
Application Error Disclosure,90022,,Medium,550,This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.,Parent Directory,545,,2545,GET,Application Error Disclosure,,,90022,,Medium,Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.,2545,3,"{'WSTG-v42-ERRH-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces', 'WSTG-v42-ERRH-01': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling', 'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-550': 'https://cwe.mitre.org/data/definitions/550.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=D,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),546,,2546,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2546,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/PGSQL.php,13
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),547,,2533,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2533,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/?C=D;O=D,13
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,548,,2541,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2541,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=D,15
Content Security Policy (CSP) Header Not Set,10038-1,,High,693,"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",,549,,2545,GET,Content Security Policy (CSP) Header Not Set,,,10038,"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy
https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
https://www.w3.org/TR/CSP/
https://w3c.github.io/webappsec-csp/
https://web.dev/articles/csp
https://caniuse.com/#feat=contentsecuritypolicy
https://content-security-policy.com/",Medium,"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",2545,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=D,15
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,550,,2533,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2533,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/?C=D;O=D,15
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,551,,2545,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2545,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=D,16
Directory Browsing,10033,,Medium,548,"It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.",<title>Index of /dvwa/includes/DBMS</title>,552,,2541,GET,Directory Browsing,Web server identified: Apache 2,,10033,https://cwe.mitre.org/data/definitions/548.html,Medium,Configure the web server to disable directory browsing.,2541,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=D,16
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),553,,2545,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2545,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,554,,2545,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2545,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=D;O=D,15
"Server Leaks Version Information via ""Server"" HTTP Response Header Field",10036,,High,497,"The web/application server is leaking version information via the ""Server"" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",Apache/2.4.25 (Debian),555,,2541,GET,"Server Leaks Version Information via ""Server"" HTTP Response Header Field",,,10036,"https://httpd.apache.org/docs/current/mod/core.html#servertokens
https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)
https://www.troyhunt.com/shhh-dont-let-your-response-headers/",Low,"Ensure that your web server, application server, load balancer, etc. is configured to suppress the ""Server"" header or provide generic details.",2541,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html', 'WSTG-v42-INFO-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server', 'CWE-497': 'https://cwe.mitre.org/data/definitions/497.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=D,13
X-Content-Type-Options Header Missing,10021,,Medium,693,"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",,556,,2541,GET,X-Content-Type-Options Header Missing,"This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At ""High"" threshold this scan rule will not alert on client or server error responses.",x-content-type-options,10021,"https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)
https://owasp.org/www-community/Security_Headers",Low,"Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.
If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",2541,3,"{'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/', 'POLICY_QA_STD': '', 'POLICY_PENTEST': '', 'CWE-693': 'https://cwe.mitre.org/data/definitions/693.html', 'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html'}",http://dvwa/dvwa/includes/DBMS/?C=S;O=D,15
Directory Browsing,0,http://dvwa/dvwa/includes/,Medium,548,"It is possible to view the directory listing. Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.",Parent Directory,566,,5034,GET,Directory Browsing,,,0,https://httpd.apache.org/docs/mod/core.html#options,Medium,"Disable directory browsing. If this is required, make sure the listed files does not induce risks.",2536,1,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_API': '', 'POLICY_QA_STD': '', 'POLICY_QA_FULL': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html'}",http://dvwa/dvwa/includes/,48
Directory Browsing,0,http://dvwa/dvwa/includes/DBMS/,Medium,548,"It is possible to view the directory listing. Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.",Parent Directory,569,,5040,GET,Directory Browsing,,,0,https://httpd.apache.org/docs/mod/core.html#options,Medium,"Disable directory browsing. If this is required, make sure the listed files does not induce risks.",2543,1,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_API': '', 'POLICY_QA_STD': '', 'POLICY_QA_FULL': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html'}",http://dvwa/dvwa/includes/DBMS/,48
Directory Browsing,0,http://dvwa/dvwa/js/,Medium,548,"It is possible to view the directory listing. Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.",Parent Directory,572,,5049,GET,Directory Browsing,,,0,https://httpd.apache.org/docs/mod/core.html#options,Medium,"Disable directory browsing. If this is required, make sure the listed files does not induce risks.",2539,1,"{'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/', 'POLICY_API': '', 'POLICY_QA_STD': '', 'POLICY_QA_FULL': '', 'CWE-548': 'https://cwe.mitre.org/data/definitions/548.html', 'POLICY_PENTEST': '', 'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html'}",http://dvwa/dvwa/js/,48
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,635,,5688,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,636,,5708,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,637,,5716,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,638,,5738,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,639,,5758,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,640,,5797,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,641,,5801,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,642,,5831,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,643,,5835,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,644,,5843,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,645,,5848,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,646,,5895,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,647,,5905,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,648,,5916,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,649,,5917,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,650,,5922,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,651,,5935,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,652,,5945,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,653,,5949,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,654,,5970,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,655,,5971,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,656,,5973,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,657,,5982,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,msnbot/1.1 (+http://search.msn.com/msnbot.htm),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,658,,5988,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,659,,5992,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp),Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,660,,5994,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,661,,5997,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,662,,6001,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,663,,6003,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,664,,6005,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,665,,6007,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2511,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes,0
User Agent Fuzzer,10104,"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,666,,6009,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,667,,6011,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,668,,6013,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2539,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/js,0
User Agent Fuzzer,10104,Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0,Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,669,,6015,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
User Agent Fuzzer,10104,"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Medium,0,"Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",,670,,6017,GET,User Agent Fuzzer,,Header User-Agent,10104,https://owasp.org/wstg,Informational,,2543,1,"{'POLICY_PENTEST': '', 'CUSTOM_PAYLOADS': ''}",http://dvwa/dvwa/includes/DBMS,0
